// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  nik           String    @db.VarChar(225)
  name          String    @db.VarChar(225)
  address       String
  email         String    @db.VarChar(225) @unique
  phone_number  String    @db.VarChar(20)
  createdAt     DateTime? @db.Timestamptz() @default(now())
  updatedAt     DateTime? @db.Timestamptz() @updatedAt
  account Accounts[]
}

model Accounts {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  acc_numb      String    @db.VarChar(225)
  password      String    @db.VarChar(225)
  pin           String    @db.VarChar(6)
  balance       Int
  createdAt     DateTime? @db.Timestamptz() @default(now())
  updatedAt     DateTime? @db.Timestamptz() @updatedAt
  user          Users     @relation(fields: [userId], references: [id])
  userId        String    @db.Uuid
  transaction Transactions[]
}

model TransactionType {
  id    Int     @id @default(autoincrement())
  desc  String
  transaction Transactions[]
}

model Transactions {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  amount        Int
  note          String?
  date          DateTime  @default(now())
  sourceAccount Accounts  @relation(fields: [accountFromId], references: [id])
  accountFromId String    @db.Uuid
  accountToId   String    @db.Uuid
  type          TransactionType @relation(fields: [transactionTypeId], references: [id])
  transactionTypeId Int
}